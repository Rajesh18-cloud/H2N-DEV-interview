Python script that converts your XML data into a Python dictionary and then prints it as JSON:

python
import xml.etree.ElementTree as ET
import json

# XML data
xml_data = """
<Orders>
    <Order>
        <OrderID>81</OrderID>
        <Customer>
            <CustomerID>81</CustomerID>
            <Name>Customer 81</Name>
        </Customer>
        <OrderDate>2024-10-15T10:21:00</OrderDate>
        <Products>
            <Product>
                <ProductID>181</ProductID>
                <Name>Product 81</Name>
                <Quantity>2</Quantity>
                <Price>17.31</Price>
            </Product>
        </Products>
        <TotalAmount>310.68</TotalAmount>
    </Order>
</Orders>
"""

# Function to convert XML to dictionary
def xml_to_dict(element):
    if len(element) == 0:
        return element.text
    return {child.tag: xml_to_dict(child) for child in element}

# Parse XML data
root = ET.fromstring(xml_data)
orders_dict = xml_to_dict(root)

# Convert dictionary to JSON
orders_json = json.dumps(orders_dict, indent=4)

# Print JSON
print(orders_json)
Running this script will parse the XML, convert it into a dictionary, and then convert that dictionary into JSON format. The JSON output will look like this:

json

{
    "Orders": {
        "Order": {
            "OrderID": "81",
            "Customer": {
                "CustomerID": "81",
                "Name": "Customer 81"
            },
            "OrderDate": "2024-10-15T10:21:00",
            "Products": {
                "Product": {
                    "ProductID": "181",
                    "Name": "Product 81",
                    "Quantity": "2",
                    "Price": "17.31"
                }
            },
            "TotalAmount": "310.68"
        }
    }
}
